name: 그러니까 CI/CD

on:
  pull_request:
    types: [ "closed" ]
    branches: [ "main", "deploy", "dev"]

permissions:
  contents: read

env:
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env :
      APPLICATION: ${{ secrets.APPLICATION_YML }}

    steps:
    - uses: actions/checkout@v3
    - name: JDK 17 설치
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name : 프로퍼티 세팅
      run: |
        cd src/main/resources
        echo ${{ env.APPLICATION }} > ./application.yml
      shell: bash

    - name: 서버 빌드
      run: |
        mkdir -p deploy-server/
        chmod +x ./gradlew
        ./gradlew clean bootjar -x test # -x asciidoctor
        cp build/libs/*.jar deploy-server/
      shell: bash

    - name: 압축 파일 생성
      run: |
        cp appspec.yml deploy-server/appspec.yml
        cp -r scripts/deploy-aws deploy-server/scripts
        zip -r deploy-server.zip ./deploy-server
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./deploy-server.zip s3://$S3_BUCKET_NAME/deploy-server.zip

    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name project-rhinitis-indeed
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name indeed-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=deploy-server.zip
